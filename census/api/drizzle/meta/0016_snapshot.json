{
  "id": "e9c855b4-41a7-4210-b980-305f79d0c07a",
  "prevId": "5e3dfe2e-eace-47f5-becb-b4a0d2275623",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.achievements": {
      "name": "achievements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        },
        "identification_id": {
          "name": "identification_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "observation_id": {
          "name": "observation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "points": {
          "name": "points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "redeemed": {
          "name": "redeemed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "user_id_achievements_idx": {
          "name": "user_id_achievements_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "type_achievements_idx": {
          "name": "type_achievements_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "points_achievements_idx": {
          "name": "points_achievements_idx",
          "columns": [
            {
              "expression": "points",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "achievements_user_id_users_id_fk": {
          "name": "achievements_user_id_users_id_fk",
          "tableFrom": "achievements",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "achievements_identification_id_identifications_id_fk": {
          "name": "achievements_identification_id_identifications_id_fk",
          "tableFrom": "achievements",
          "tableTo": "identifications",
          "columnsFrom": [
            "identification_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "achievements_observation_id_observations_id_fk": {
          "name": "achievements_observation_id_observations_id_fk",
          "tableFrom": "achievements",
          "tableTo": "observations",
          "columnsFrom": [
            "observation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.captures": {
      "name": "captures",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "captured_at": {
          "name": "captured_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "captured_by": {
          "name": "captured_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "capture_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "feed_id": {
          "name": "feed_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "start_capture_at": {
          "name": "start_capture_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "end_capture_at": {
          "name": "end_capture_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "video_url": {
          "name": "video_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mux_asset_id": {
          "name": "mux_asset_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mux_playback_id": {
          "name": "mux_playback_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "clip_id": {
          "name": "clip_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "clip_metadata": {
          "name": "clip_metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "clip_id_idx": {
          "name": "clip_id_idx",
          "columns": [
            {
              "expression": "clip_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "captures_captured_by_users_id_fk": {
          "name": "captures_captured_by_users_id_fk",
          "tableFrom": "captures",
          "tableTo": "users",
          "columnsFrom": [
            "captured_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "captures_feed_id_feeds_id_fk": {
          "name": "captures_feed_id_feeds_id_fk",
          "tableFrom": "captures",
          "tableTo": "feeds",
          "columnsFrom": [
            "feed_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "captures_clip_id_unique": {
          "name": "captures_clip_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "clip_id"
          ]
        }
      }
    },
    "public.feeds": {
      "name": "feeds",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'offline'"
        },
        "last_seen_at": {
          "name": "last_seen_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "fallback_feed_id": {
          "name": "fallback_feed_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.feedback": {
      "name": "feedback",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "identification_id": {
          "name": "identification_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "feedback_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "identification_idx": {
          "name": "identification_idx",
          "columns": [
            {
              "expression": "identification_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_idx": {
          "name": "user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_identification_id_identifications_id_fk": {
          "name": "feedback_identification_id_identifications_id_fk",
          "tableFrom": "feedback",
          "tableTo": "identifications",
          "columnsFrom": [
            "identification_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "feedback_user_id_users_id_fk": {
          "name": "feedback_user_id_users_id_fk",
          "tableFrom": "feedback",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.identifications": {
      "name": "identifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "nickname": {
          "name": "nickname",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "source_id": {
          "name": "source_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "source_ancestor_ids": {
          "name": "source_ancestor_ids",
          "type": "integer[]",
          "primaryKey": false,
          "notNull": true
        },
        "observation_id": {
          "name": "observation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "suggested_by": {
          "name": "suggested_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "confirmed_by": {
          "name": "confirmed_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "alternate_for": {
          "name": "alternate_for",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "shiny_id": {
          "name": "shiny_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_accessory": {
          "name": "is_accessory",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "source_idx": {
          "name": "source_idx",
          "columns": [
            {
              "expression": "source_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "identifications_observation_id_observations_id_fk": {
          "name": "identifications_observation_id_observations_id_fk",
          "tableFrom": "identifications",
          "tableTo": "observations",
          "columnsFrom": [
            "observation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "identifications_suggested_by_users_id_fk": {
          "name": "identifications_suggested_by_users_id_fk",
          "tableFrom": "identifications",
          "tableTo": "users",
          "columnsFrom": [
            "suggested_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "identifications_confirmed_by_users_id_fk": {
          "name": "identifications_confirmed_by_users_id_fk",
          "tableFrom": "identifications",
          "tableTo": "users",
          "columnsFrom": [
            "confirmed_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "identifications_shiny_id_shinies_id_fk": {
          "name": "identifications_shiny_id_shinies_id_fk",
          "tableFrom": "identifications",
          "tableTo": "shinies",
          "columnsFrom": [
            "shiny_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.images": {
      "name": "images",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "width": {
          "name": "width",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "observation_id": {
          "name": "observation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "identification_id": {
          "name": "identification_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "bounding_box": {
          "name": "bounding_box",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.metrics": {
      "name": "metrics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "unique_name_created_at_idx": {
          "name": "unique_name_created_at_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_id_metrics_idx": {
          "name": "user_id_metrics_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "name_metrics_idx": {
          "name": "name_metrics_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "metrics_user_id_users_id_fk": {
          "name": "metrics_user_id_users_id_fk",
          "tableFrom": "metrics",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "user_id_notifications_idx": {
          "name": "user_id_notifications_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notifications_user_id_users_id_fk": {
          "name": "notifications_user_id_users_id_fk",
          "tableFrom": "notifications",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.observations": {
      "name": "observations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "nickname": {
          "name": "nickname",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "capture_id": {
          "name": "capture_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "observed_at": {
          "name": "observed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "observed_by": {
          "name": "observed_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "removed": {
          "name": "removed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "moderated": {
          "name": "moderated",
          "type": "json",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::json"
        },
        "discord_thread_id": {
          "name": "discord_thread_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "observations_capture_id_captures_id_fk": {
          "name": "observations_capture_id_captures_id_fk",
          "tableFrom": "observations",
          "tableTo": "captures",
          "columnsFrom": [
            "capture_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "observations_observed_by_users_id_fk": {
          "name": "observations_observed_by_users_id_fk",
          "tableFrom": "observations",
          "tableTo": "users",
          "columnsFrom": [
            "observed_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.responses": {
      "name": "responses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "user_id_responses_idx": {
          "name": "user_id_responses_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "responses_user_id_users_id_fk": {
          "name": "responses_user_id_users_id_fk",
          "tableFrom": "responses",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.seasons": {
      "name": "seasons",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.shinies": {
      "name": "shinies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "season_id": {
          "name": "season_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "asset_id": {
          "name": "asset_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "inat_id": {
          "name": "inat_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "identification_id": {
          "name": "identification_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "identification_id_idx": {
          "name": "identification_id_idx",
          "columns": [
            {
              "expression": "identification_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "i_nat_id_idx": {
          "name": "i_nat_id_idx",
          "columns": [
            {
              "expression": "inat_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "shinies_season_id_seasons_id_fk": {
          "name": "shinies_season_id_seasons_id_fk",
          "tableFrom": "shinies",
          "tableTo": "seasons",
          "columnsFrom": [
            "season_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.tag_assignments": {
      "name": "tag_assignments",
      "schema": "",
      "columns": {
        "tag_id": {
          "name": "tag_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "identification_id": {
          "name": "identification_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "tag_assignments_tag_id_tags_id_fk": {
          "name": "tag_assignments_tag_id_tags_id_fk",
          "tableFrom": "tag_assignments",
          "tableTo": "tags",
          "columnsFrom": [
            "tag_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "tag_assignments_identification_id_identifications_id_fk": {
          "name": "tag_assignments_identification_id_identifications_id_fk",
          "tableFrom": "tag_assignments",
          "tableTo": "identifications",
          "columnsFrom": [
            "identification_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.tags": {
      "name": "tags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "tag_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "twitch_user_id": {
          "name": "twitch_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "restricted": {
          "name": "restricted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "banned": {
          "name": "banned",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "twitch_user_id_idx": {
          "name": "twitch_user_id_idx",
          "columns": [
            {
              "expression": "twitch_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    }
  },
  "enums": {
    "public.capture_status": {
      "name": "capture_status",
      "schema": "public",
      "values": [
        "draft",
        "pending",
        "processing",
        "complete",
        "archived"
      ]
    },
    "public.status": {
      "name": "status",
      "schema": "public",
      "values": [
        "offline",
        "unhealthy",
        "healthy"
      ]
    },
    "public.feedback_type": {
      "name": "feedback_type",
      "schema": "public",
      "values": [
        "agree",
        "disagree",
        "confirm"
      ]
    },
    "public.tag_type": {
      "name": "tag_type",
      "schema": "public",
      "values": [
        "generic",
        "event",
        "campaign"
      ]
    },
    "public.role": {
      "name": "role",
      "schema": "public",
      "values": [
        "capturer",
        "member",
        "expert",
        "moderator",
        "researcher",
        "admin",
        "pending"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}